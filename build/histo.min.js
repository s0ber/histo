/*! histo (v0.1.2),
 Library, which allows different widgets to register it's own history events handlers, which won't be conflicting with each others,
 by Sergey Shishkalov <sergeyshishkalov@gmail.com>
 Sun Jul 06 2014 */
(function(){var t;t={},null==window.modula&&(window.modula={"export":function(n,i){return t[n]=i},require:function(n){var i;if(i=t[n])return i;throw"Module '"+n+"' not found."}})}).call(this),function(){var t={}.hasOwnProperty;window.Histo=function(){function n(){}return n.addWidget=function(t){var n,i;return null==t&&(t={}),this._launcher().isInitialized()||this._launcher().initialize(),n=modula.require("histo/widget"),i=new n(t),null==this.widgets&&(this.widgets={}),this.widgets[i.id]=i},n.saveInitialStateAsCurrent=function(){return this.saveCurrentState(window.location.state||{})},n.currentState=function(){return this._currentState},n.saveCurrentState=function(t){return this._currentState=_.clone(t)},n.supplementState=function(t){var n,i,e,r,a;if(!this.isPopping)return i=t.id,r=t.widgetState,e=this._history().state||{},r.state_id=null!=(n=null!=(a=e[i])?a.state_id:void 0)?n:0,e[i]=r,this._history().replaceState(e,null,location.href),this.saveCurrentState(e)},n.pushNewState=function(t,n){var i,e,r;return this._launcher().onBeforePushState(),i=n.id,r=n.widgetState,r.state_id=this.currentState()[i].state_id+1,e=this.currentState(),e[i]=r,t=this._removeURIParameter(t,"_"),this._history().pushState(e,null,t),this.saveCurrentState(e)},n.onPopState=function(t){var n,i,e;return n=this._getChangedWidgetId(t),null!=n?(e=t[n],i=location.href,this.saveCurrentState(t),this._asyncFn().addToCallQueue(function(t){return function(){var r,a;return t.isPopping=!0,r=new $.Deferred,r.done(function(){return t.isPopping=!1}),a=t.widgets[n],a.callCallback(e,i,r),r.promise()}}(this))):void 0},n._getChangedWidgetId=function(n){var i,e,r,a,o,u;i=null;for(a in n)if(t.call(n,a)){o=n[a],u=this.currentState();for(e in u)if(t.call(u,e)&&(r=u[e],a===e&&o.state_id!==r.state_id&&1===Math.abs(o.state_id-r.state_id))){i=a;break}}return i},n._launcher=function(){return null!=this.__launcher?this.__launcher:this.__launcher=modula.require("histo/launcher")},n._asyncFn=function(){return null!=this.__asyncFn?this.__asyncFn:this.__asyncFn=modula.require("histo/async_fn")},n._history=function(){return window.history},n._removeURIParameter=function(t,n){var i,e,r,a,o,u,s;if(t=t.toString(),o=t.split("?"),o.length<2)return t;for(a=encodeURIComponent(n)+"=",r=o[1].split(/[&;]/g),e=[],i=u=0,s=r.length;s>=0?s>u:u>s;i=s>=0?++u:--u)-1===r[i].lastIndexOf(a,0)&&e.push(r[i]);return t=e.length?o[0]+"?"+e.join("&"):o[0]},n}(),modula["export"]("histo",Histo)}.call(this),function(){var t,n;t=modula.require("histo"),n=function(){function n(){}return n.initialize=function(){return this._isInitialized=!0,this._fakeStatePopped=!1,this._initialUrl=location.href,window.onpopstate=_.bind(this._popState,this),t.saveInitialStateAsCurrent()},n.unload=function(){return this._isInitialized=!1,this._fakeStatePopped=!1,window.onpopstate=null},n.isInitialized=function(){return this._isInitialized},n.onBeforePushState=function(){return this._fakeStatePopped=!0},n._popState=function(n){return location.href!==this._initialUrl||this._fakeStatePopped?(this._fakeStatePopped=!0,t.onPopState(null!=n?n.state:void 0)):void(this._fakeStatePopped=!0)},n}(),modula["export"]("histo/launcher",n)}.call(this),function(){var t,n;t=modula.require("histo"),n=function(){function n(t){t.id&&(this.id=t.id,this.poppedStateCallback=null)}return n.prototype.onPopState=function(t){return this.poppedStateCallback=t},n.prototype.callCallback=function(t,n,i){return null!=this.poppedStateCallback?this.poppedStateCallback(t,n,i):void 0},n.prototype.replaceInitialState=function(n){return t.supplementState({id:this.id,widgetState:n})},n.prototype.pushState=function(n,i){return t.pushNewState(n,{id:this.id,widgetState:i})},n}(),modula["export"]("histo/widget",n)}.call(this),function(){var t;t=function(){function t(t){this.fn=t}return t.addToCallQueue=function(n){var i;return i=new t(n),null!=this.currentFn?this.currentFn.done(function(){return function(){return i.call()}}(this)):i.call(),this.currentFn=i},t.prototype.done=function(t){return this.callback=t,this.isCalled?this.callback():void 0},t.prototype.call=function(){return this.isCalled?void 0:this.fn().done(function(t){return function(){return t.isCalled=!0,t.callback?t.callback():void 0}}(this))},t}(),modula["export"]("histo/async_fn",t)}.call(this);